version: 2.1

workflows:
  version: 2
  circleci:
    jobs:
      - test
      - native-build
      - docker-build

jobs:
  test:
    docker:
      - image: node:20.4.0
    steps:
      - checkout
      - run: npm ci --prefix tests
      - run: make test

  native-build:
    docker:
      - image: debian:12.0
    environment:
      VALIDATE_HADOLINT: "false"
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: |
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install --yes \
              ca-certificates curl git pandoc libxml2-utils \
              build-essential meson \
              bmake make \
              nodejs npm \
              composer php php-cli php-common php-mbstring php-zip \
              python3 python3-pip python3-venv \
              bundler ruby ruby-build ruby-dev \
              rust-all \
              golang \
              cabal-install ghc \
              ash bash dash ksh ksh93u+m mksh posh yash zsh \
              shellcheck
      - run:
          name: Install project dependencies
          command: make bootstrap
      - run:
          name: Install HomeBrew
          command: |
            bash linters/gitman/brew-installer/install.sh
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
            brew --help
            brew bundle --help
      - run:
          name: Run lint
          command: |
            PATH="$PATH:/home/linuxbrew/.linuxbrew/bin" \
              npm run azlint:lint
      - run:
          name: Git status (before formatting)
          command: |
            if [ "$(git status --short | wc -l)" -ne 0 ]; then
              printf 'Found following changes:\n'
              git status
              exit 1
            fi
      - run:
          name: Run fmt
          command: |
            PATH="$PATH:/home/linuxbrew/.linuxbrew/bin" \
              npm run azlint:fmt
      - run:
          name: Git status (after formatting)
          command: |
            if [ "$(git status --short | wc -l)" -ne 0 ]; then
              printf 'Found following changes:\n'
              git status
              exit 1
            fi

  docker-build:
    docker:
      - image: docker:24.0.4
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: apk update --no-cache
      - run: apk add --no-cache make
      - run: make build
      - run: make run
