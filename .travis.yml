language: minimal

os:
  - osx
  - linux

addons:
  apt:
    update: true
  homebrew:
    update: true

jobs:
  include:
    # other Ubuntu versions
    - { if: branch = master, os: linux, dist: bionic }
    - { if: branch = master, os: linux, dist: xenial }
    # - { if: branch = master, os: linux, dist: trusty }
    # - { if: branch = master, os: linux, dist: precise }

    # other macOS versions
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode11.3 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode11.2 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode11.1 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode11 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode10.2 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode10.1 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode10 }
    - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode9.4 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode9.3 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode9.2 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode9.1 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode9 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode8.3 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode8 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode7.3 }
    # - { if: branch = master AND type != pull_request, os: osx, osx_image: xcode6.4 }

    - os: linux
      services: docker
      install:
        - docker build --tag azlint:dev .
      script:
        - docker run --interactive --tty --rm --volume "${PWD}:/mount" azlint:dev

before_install:
  - uname -a
  - if [ "$(uname -s)" = 'Darwin' ]; then sw_vers; fi

install:
  - |
    if command -v apt-get >/dev/null 2>&1; then
      nvm install node # otherwise node is not available
      eval "$(gimme stable)" # otherwise go-v1.11 is present
    fi
  - |
    if [ "$(uname -s)" = Darwin ]; then
      brew uninstall --force --ignore-dependencies python2 # otherwise python3 errors linking
    fi
  - sh 'utils/install.sh'

script:
  - sh 'utils/lint.sh'
